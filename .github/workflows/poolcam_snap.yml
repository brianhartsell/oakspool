name: PoolCam Snapshot

on:
  workflow_dispatch:

jobs:
  snapshot:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Ensure session folder exists
        run: |
          mkdir -p session
          chmod 777 session

      - name: Restore Eufy session cache
        uses: actions/cache@v4
        id: session-cache
        with:
          path: session
          key: eufy-session-${{ runner.os }}-v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Start Eufy bridge (Docker)
        id: start-bridge
        run: |
          CONTAINER_ID=$(docker run -d \
            -e USERNAME=${{ secrets.EUFY_USER }} \
            -e PASSWORD=${{ secrets.EUFY_PASS }} \
            -e DEVICE_ID=poolcam-ci-ephemeral \
            -e COUNTRY=US \
            -e LANGUAGE=en \
            -e XDG_CONFIG_HOME=/usr/src/app/session \
            -v ${{ github.workspace }}/session:/usr/src/app/session \
            -p 3000:3000 \
            bropat/eufy-security-ws:latest)
          echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV
          echo "Started bridge as $CONTAINER_ID"

      - name: Inspect container status
        run: docker inspect $CONTAINER_ID

      - name: Set PIN_REQUIRED flag
        run: echo "PIN_REQUIRED=${{ steps.session-cache.outputs.cache-hit != 'true' }}" >> $GITHUB_ENV

      - name: Wait + Probe for bridge readiness
        run: |
          for i in {1..30}; do
            RESPONSE=$(curl --silent --show-error \
              --connect-timeout 1 \
              --max-time 2 \
              http://localhost:3000/info || true)

            if echo "$RESPONSE" | grep -q '"isConnected":true'; then
              echo "✅ Bridge is ready after $i attempts"
              break
            fi

            echo "⏳ Waiting for bridge... ($i)"
            sleep 2

            if [ "$i" -eq 30 ]; then
              echo "❌ Bridge never connected—dumping container logs:"
              docker logs $CONTAINER_ID || true
              exit 1
            fi
          done

      - name: Submit Safety PIN
        if: env.PIN_REQUIRED == 'true'
        run: |
          curl -X POST http://localhost:3000/login/verifyCode \
            -H "Content-Type: application/json" \
            -d "{\"code\":\"${{ secrets.EUFY_PIN }}\"}"

      - name: Install Python deps
        run: pip install websockets python-ffmpeg

      - name: Run flowmeter script
        run: python flowmeter.py

      - name: Upload snapshot
        uses: actions/upload-artifact@v4
        with:
          name: poolcam-frame
          path: flow_reading.jpg
