name: PoolCam Snapshot

on:
  workflow_dispatch:

jobs:
  snapshot:
    runs-on: ubuntu-latest

    steps:

      - name: Restore Eufy session cache
        uses: actions/cache@v4
        id: session-cache
        with:
          path: session
          key: eufy-session-${{ runner.os }}-v1
          restore-keys: |
            eufy-session-${{ runner.os }}-v1

      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Start Eufy bridge (Docker)
        run: |
          docker run -d \
            -e USERNAME=${{ secrets.EUFY_USER }} \
            -e PASSWORD=${{ secrets.EUFY_PASS }} \
            -e DEVICE_ID=poolcam-ci-ephemeral \
            -e COUNTRY=US \
            -e LANGUAGE=en \
            -e XDG_CONFIG_HOME=/usr/src/app/session \
            -v ${{ github.workspace }}/session:/usr/src/app/session \
            -p 3000:3000 \
            bropat/eufy-security-ws:latest

      - name: Set PIN_REQUIRED flag
        run: echo "PIN_REQUIRED=${{ steps.session-cache.outputs.cache-hit != 'true' }}" >> $GITHUB_ENV

      - name: Wait for bridge to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/info | grep -q '"isConnected":true'; then
              echo "Bridge is ready"
              break
            fi
            echo "Waiting for bridge... ($i)"
            sleep 2
            if [ $i -eq 30 ]; then
              echo "Bridge never connected. Exiting."
              exit 1
            fi
          done

      - name: Submit Safety PIN
        if: env.PIN_REQUIRED == 'true'
        run: |
          curl -X POST http://localhost:3000/login/verifyCode \
            -H 'Content-Type: application/json' \
            -d "{\"code\":\"${{ secrets.EUFY_PIN }}\"}"

      - name: Install Python deps
        run: pip install websockets python-ffmpeg

      - name: Run flowmeter script
        run: python flowmeter.py

      - name: Upload snapshot
        uses: actions/upload-artifact@v4
        with:
          name: poolcam-frame
          path: flow_reading.jpg
